<!DOCTYPE html>
<html>
 <head>
  <meta charset="utf-8"/>
  <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js" integrity="sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49" crossorigin="anonymous"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js" integrity="sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy" crossorigin="anonymous"></script>
   <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css" integrity="sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO" crossorigin="anonymous">
    <link href="https://fonts.googleapis.com/css?family=Hi+Melody" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css?family=Gamja+Flower" rel="stylesheet">
    <style>
        .wrapper{
            width:100%;
            background-color:white;
            height:38.1em;
        }
        .wrapper>.real{
            width:70%;
            height:100%;
            background-color:#ffab91;
            float:left;
            padding: 2em;
            background-image: url("/assets/library1.jpg");
        }
        .wrapper>.hide{
            width:30%;
            height:100%;
            background-color:#424242;
            float:left;
        }
        .wrapper>.hide>a>.btn{
            float:right;
            margin:33em 2em 2em 2em;
        }
        .wrapper>.real>h2{
            font-family: 'Hi Melody', cursive;
            font-size: 3em;
            text-align:center;
            font-weight: bold;
        }
        .wrapper>.real>p{
            font-family: 'Gamja Flower', cursive;
            font-size:1.5em;
        }
        .wrapper>.real>.canvas{
            width:60%;
            background-color: white;
            margin: 0 auto;
            border-radius: 1em;
        }
        .wrapper>.real>a>.btn{
            float: right;
        }
    </style>
  <script type="application/javascript">
    function draw(canvasLength, value1, value2, value3, value4, value5, value6) {
      var canvas = document.getElementById("canvas");
      
      var value = [value1, value2, value3, value4, value5, value6];
      var grade = [0,0,0,0,0,0];
      var x = [0,0,0,0,0,0];
      var y = [0,0,0,0,0,0];

      if (canvas.getContext) {
        var ctx = canvas.getContext("2d");

        ctx.fillStyle = "rgb(0,0,0)";
        drawHexaAxis(ctx,canvasLength);
        for(var i=1; i<6; i++) {
          drawHexagon(ctx, canvasLength, i);
        }


        for(var i=0; i<grade.length; i++) {
          grade[i] = gradeValue(value[i]);
        }

        for(var i=0; i<grade.length; i++) {
          x[i] = pointXOnHexaAxis(i,grade[i],canvasLength);
          y[i] = pointYOnHexaAxis(i,grade[i],canvasLength);
        }

        ctx.fillStyle = "rgba(0, 0, 200, 0.5)";
        drawHexaPoly(ctx, x[0], y[0], x[1], y[1], x[2], y[2], x[3], y[3], x[4], y[4], x[5], y[5]);
        
        ctx.fillStyle="rgb(0,0,0)";
        drawTextOnHexaAxis(ctx, canvasLength);
      }
    }

    function drawHexagon(ctx, canvasLength, i){
      var basicAngle = Math.PI/6;
      var radiusHexa = (i/16)*(6/4)*canvasLength;
      var correctOrigin = canvasLength/2;

      ctx.beginPath();

      ctx.moveTo(correctOrigin + radiusHexa*Math.cos(basicAngle), correctOrigin + radiusHexa*Math.sin(basicAngle));

      ctx.lineTo(correctOrigin + radiusHexa*Math.cos(3*basicAngle), correctOrigin + radiusHexa*Math.sin(3*basicAngle));

      ctx.lineTo(correctOrigin + radiusHexa*Math.cos(5*basicAngle), correctOrigin + radiusHexa*Math.sin(5*basicAngle));

      ctx.lineTo(correctOrigin + radiusHexa*Math.cos(7*basicAngle), correctOrigin + radiusHexa*Math.sin(7*basicAngle));

      ctx.lineTo(correctOrigin+radiusHexa*Math.cos(9*basicAngle), correctOrigin+radiusHexa*Math.sin(9*basicAngle));

      ctx.lineTo(correctOrigin+radiusHexa*Math.cos(11*basicAngle), correctOrigin+radiusHexa*Math.sin(11*basicAngle));

      ctx.lineTo(correctOrigin + radiusHexa*Math.cos(basicAngle), correctOrigin + radiusHexa*Math.sin(basicAngle));

      ctx.stroke();
    }
    function drawHexaPoly(ctx, x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6){
      ctx.beginPath();
      ctx.moveTo(x1,y1);
      ctx.lineTo(x2,y2);
      ctx.lineTo(x3,y3);
      ctx.lineTo(x4,y4);
      ctx.lineTo(x5,y5);
      ctx.lineTo(x6,y6);
      ctx.lineTo(x1,y1);
      ctx.fill();
      ctx.stroke();
    }

    function drawHexaAxis(ctx,canvasLength){
      var basicAngle = Math.PI/6;
      var radiusHexa = 1/2*canvasLength;
      var correctOrigin = canvasLength/2;

      ctx.beginPath();

      ctx.moveTo(canvasLength/2, canvasLength/2);
      ctx.lineTo(correctOrigin + radiusHexa*Math.cos(basicAngle), correctOrigin + radiusHexa*Math.sin(basicAngle));

      ctx.moveTo(canvasLength/2, canvasLength/2);
      ctx.lineTo(correctOrigin + radiusHexa*Math.cos(3*basicAngle), correctOrigin + radiusHexa*Math.sin(3*basicAngle));

      ctx.moveTo(canvasLength/2, canvasLength/2);
      ctx.lineTo(correctOrigin + radiusHexa*Math.cos(5*basicAngle), correctOrigin + radiusHexa*Math.sin(5*basicAngle));

      ctx.moveTo(canvasLength/2, canvasLength/2);
      ctx.lineTo(correctOrigin + radiusHexa*Math.cos(7*basicAngle), correctOrigin + radiusHexa*Math.sin(7*basicAngle));

      ctx.moveTo(canvasLength/2, canvasLength/2);
      ctx.lineTo(correctOrigin+radiusHexa*Math.cos(9*basicAngle), correctOrigin+radiusHexa*Math.sin(9*basicAngle));

      ctx.moveTo(canvasLength/2, canvasLength/2);
      ctx.lineTo(correctOrigin+radiusHexa*Math.cos(11*basicAngle), correctOrigin+radiusHexa*Math.sin(11*basicAngle));

      ctx.stroke();
    }

    function gradeValue(value){
      if(value>0 && value<=5){
        return 1;
      }
      else if(value>5 && value<=10){
        return 2;
      }
      else if(value>10 && value<=15){
        return 3;
      }
      else if(value>15 && value<=20){
        return 4;
      }
      else{
        return 5;
      }
    }

    function pointXOnHexaAxis(axisNum, grade, canvasLength){
      var basicAngle = Math.PI/6;
      var radiusHexa = 6/4*canvasLength;
      var scaledRadius = radiusHexa*grade/16;
      var correctOrigin = canvasLength/2;

      switch(axisNum){
        case 0 :
          return correctOrigin + scaledRadius*Math.cos(basicAngle);
          break;
        case 1 :
          return correctOrigin + scaledRadius*Math.cos(3*basicAngle);
          break;
        case 2 :
          return correctOrigin + scaledRadius*Math.cos(5*basicAngle);
          break;
        case 3 :
          return correctOrigin + scaledRadius*Math.cos(7*basicAngle);
          break;
        case 4 :
          return correctOrigin + scaledRadius*Math.cos(9*basicAngle);
          break;
        case 5 :
          return correctOrigin + scaledRadius*Math.cos(11*basicAngle);
          break;
      }
    }

    function pointYOnHexaAxis(axisNum, grade, canvasLength){
      var basicAngle = Math.PI/6;
      var radiusHexa = 6/4*canvasLength;
      var scaledRadius = radiusHexa*grade/16;
      var correctOrigin = canvasLength/2;

      switch(axisNum){
        case 0 :
          return correctOrigin + scaledRadius*Math.sin(basicAngle);
          break;
        case 1 :
          return correctOrigin + scaledRadius*Math.sin(3*basicAngle);
          break;
        case 2 :
          return correctOrigin + scaledRadius*Math.sin(5*basicAngle);
          break;
        case 3 :
          return correctOrigin + scaledRadius*Math.sin(7*basicAngle);
          break;
        case 4 :
          return correctOrigin + scaledRadius*Math.sin(9*basicAngle);
          break;
        case 5 :
          return correctOrigin + scaledRadius*Math.sin(11*basicAngle);
          break;
      }
    }
    function drawTextOnHexaAxis(ctx,canvasLength){
      var basicAngle = Math.PI/6;
      var radiusHexa = 11/24*canvasLength;
      var correctOrigin = canvasLength/2;

      ctx.font = "16px Arial";
      ctx.fillText("생존력",correctOrigin + radiusHexa*Math.cos(basicAngle)-15, correctOrigin + radiusHexa*Math.sin(basicAngle)+30);

      ctx.fillText("순발력",correctOrigin + radiusHexa*Math.cos(3*basicAngle)+10, correctOrigin + radiusHexa*Math.sin(3*basicAngle)+15);

      ctx.fillText("인싸력",correctOrigin + radiusHexa*Math.cos(5*basicAngle)-30, correctOrigin + radiusHexa*Math.sin(5*basicAngle)+35);

      ctx.fillText("아싸력",correctOrigin + radiusHexa*Math.cos(7*basicAngle)-30, correctOrigin + radiusHexa*Math.sin(7*basicAngle)-20);

      ctx.fillText("학업력",correctOrigin + radiusHexa*Math.cos(9*basicAngle)+10, correctOrigin + radiusHexa*Math.sin(9*basicAngle)-5);

      ctx.fillText("옹뇽뇽",correctOrigin + radiusHexa*Math.cos(11*basicAngle)-15, correctOrigin + radiusHexa*Math.sin(11*basicAngle)-20);
    }

  </script>
 </head>
 <body onload="draw(canvas.width,<%=@value1%>,<%=@value2%>,<%=@value3%>,<%=@value4%>,<%=@value5%>,<%=@value6%>);">
     <div class="wrapper">
        <div class="real">
            <h2>대학생활 능력지표</h2>
            <div class="canvas">
                <canvas id="canvas" width="400" height="400" style="margin:0 auto; display:block; padding:2em"></canvas>
            </div>
            <a href="/spec/problem1"><button type="button" class="btn btn-success">다시하기</button></a>
        </div>
        <div class="hide">
            <a href="/homeworks/main"><button type="button" class="btn btn-info">과제관리 하러가기</button></a>
        </div>
    </div>
 </body>
</html>